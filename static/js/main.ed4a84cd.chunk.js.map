{"version":3,"sources":["App.js","index.js"],"names":["App","useState","photos","setPhotos","useRef","length","currentPage","setCurrentPage","fetching","setFetching","totalCount","setTotalCount","useEffect","axios","get","then","response","data","prev","headers","finally","document","addEventListener","scrollHandler","removeEventListener","e","target","documentElement","scrollTop","window","innerHeight","scrollHeight","className","map","item","src","thumbnailUrl","alt","title","id","ReactDOM","render","StrictMode","getElementById"],"mappings":"2QA8DeA,MA1Df,WACE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEA,GADsBC,iBAAOF,EAAOG,QACEJ,mBAAS,IAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAgCN,oBAAS,GAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAAoCR,mBAAS,GAA7C,mBAAOS,EAAP,KAAmBC,EAAnB,KACsBP,iBAAOM,GAE7BE,qBAAU,WACLJ,GACDK,IAAMC,IAAN,sEAAyER,IACxES,MAAK,SAAAC,GACJb,EAAU,GAAD,mBAAKD,GAAL,YAAgBc,EAASC,QAClCV,GAAe,SAAAW,GAAI,OAAIA,EAAK,KAC5BP,EAAcK,EAASG,QAAQ,qBAEhCC,SAAQ,WACPX,GAAY,QAKhB,CAACD,IAGHI,qBAAU,WAER,OADAS,SAASC,iBAAiB,SAAUC,GAC7B,WACLF,SAASG,oBAAoB,SAAUD,MAExC,CAACf,IAEJ,IAAMe,EAAgB,SAACE,GAElBA,EAAEC,OAAOC,gBAAgBC,UAAUC,OAAOC,YAAY,IAAIL,EAAEC,OAAOC,gBAAgBI,cAAc7B,EAAOG,OAAOK,GAChHD,GAAY,IAMhB,OACE,sBAAKuB,UAAU,MAAf,UACE,qBAAKA,UAAU,YAAf,SAEE9B,EAAO+B,KAAI,SAACC,GAAD,OAAU,sBAAKF,UAAU,OAAf,UACnB,qBAAKG,IAAKD,EAAKE,aAAcC,IAAI,UACjC,oBAAIL,UAAU,QAAd,SAAuBE,EAAKI,UAFkBJ,EAAKK,SAOvD,sBAAKP,UAAU,aAAf,oBAAoC9B,EAAOG,cCnDjDmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrB,SAASsB,eAAe,W","file":"static/js/main.ed4a84cd.chunk.js","sourcesContent":["import './App.css';\nimport React, {useEffect, useRef, useState} from 'react'\nimport axios from 'axios'\n\nfunction App() {\n  const [photos, setPhotos] = useState([])\n  const currentLength = useRef(photos.length)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [fetching, setFetching] = useState(true)\n  const [totalCount, setTotalCount] = useState(0)\n  const totalCountRef = useRef(totalCount)\n\n  useEffect(() => {\n    if(fetching){\n      axios.get(`https://jsonplaceholder.typicode.com/photos?_limit=12&_page=${currentPage}`)\n      .then(response => {\n        setPhotos([...photos, ...response.data])\n        setCurrentPage(prev => prev+1)\n        setTotalCount(response.headers['x-total-count'])\n      })\n      .finally(()=> {\n        setFetching(false)\n      })\n      \n    }\n\n  },[fetching])\n\n\n  useEffect(()=>{\n    document.addEventListener('scroll', scrollHandler)\n    return () => {\n      document.removeEventListener('scroll', scrollHandler)\n    }\n  }, [fetching])\n\n  const scrollHandler = (e) => {\n    \n    if(e.target.documentElement.scrollTop+window.innerHeight+100>e.target.documentElement.scrollHeight&&photos.length<totalCount){\n      setFetching(true)\n    }\n  }\n\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        {\n        photos.map((item) => <div className=\"item\" key={item.id}>\n          <img src={item.thumbnailUrl} alt=\"photo\" />\n          <h4 className=\"title\">{item.title}</h4>\n        </div>)\n\n        }\n      </div>\n      <div className=\"totalCount\">Items: {photos.length}</div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}